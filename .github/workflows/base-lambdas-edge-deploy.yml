name: 'Z-BASE Lambdas: action to deploy a single lambda'

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      python_version:
        required: true
        type: string
      build_branch:
        required: true
        type: string
        default: main
      sandbox:
        required: true
        type: string
        default: main
      lambda_handler_name:
        required: true
        type: string
      lambda_aws_name:
        required: true
        type: string
    secrets:
      AWS_ASSUME_ROLE:
        required: true

permissions:
  pull-requests: write
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  python_deploy_lambda:
    name: Deploy lambda ${{ inputs.lambda_handler_name }} to ${{ inputs.sandbox }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Display passed variables
        run: |
          echo Python Version: ${{ inputs.python_version }}
          echo Build Branch: ${{ inputs.build_branch }}
          echo Environment: ${{ inputs.environment }}
          echo Sandbox: ${{ inputs.sandbox }}
          echo Lambda Handler Name: ${{ inputs.lambda_handler_name }}
          echo Lambda AWS function: ${{ inputs.lambda_aws_name }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: 'nhsconnect/national-document-repository'
          ref: ${{ inputs.build_branch }}
          fetch-depth: '0'

      - name: Set up Python ${{ inputs.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version }}

      - name: Make virtual environment
        run: make github_env

      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip3 install -r requirements.txt
          pip3 install boto3 botocore
        working-directory: src/lambdas/${{ inputs.lambda_handler_name }}

      - name: Package dependencies
        run: |
          source venv/bin/activate
          mkdir -p build/lambdas/${{ inputs.lambda_handler_name }}
          pip install --target build/lambdas/${{ inputs.lambda_handler_name }}/package -r requirements.txt
          cp -r src/lambdas/${{ inputs.lambda_handler_name }}/* build/lambdas/${{ inputs.lambda_handler_name }}/
          cd build/lambdas/${{ inputs.lambda_handler_name }}/package && zip -r ../${{ inputs.lambda_handler_name }}.zip .
          cd .. && zip -r ../${{ inputs.lambda_handler_name }}.zip *

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: 'us-east-1'

      - name: Create release package for Lambda ${{ inputs.lambda_aws_name }}
        run: |
          make lambda_name=${{ inputs.lambda_handler_name}} zip

      - name: Upload Lambda Function to ${{ inputs.lambda_aws_name }}
        uses: appleboy/lambda-action@master
        with:
          aws_region: 'us-east-1'
          function_name: ${{ inputs.sandbox }}_${{ inputs.lambda_aws_name }}
          zip_file: build/lambdas/${{ inputs.lambda_handler_name }}/${{ inputs.lambda_handler_name }}.zip
