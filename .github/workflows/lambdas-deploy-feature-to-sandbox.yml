name: "Lambdas - Deploy Feature Branch to Sandbox"

on:
  workflow_dispatch:
    inputs:
      buildBranch:
        description: "Feature branch to push to test?"
        required: true
        type: "string"
      sandboxWorkspace:
        description: "Which Sandbox to push to."
        required: true
        type: "string"

permissions:
  pull-requests: write
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  python_lambdas_test:
    runs-on: ubuntu-latest
    environment: development
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.buildBranch}}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make virtual environment
        run: | 
          make env
      
      - name: Start virtual environment
        run: |
          source ./lambdas/venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Format Code and ruff check
        run: |
          make format

      - name: Test with pytest
        run: |
          make test-unit

  python_deploy_create_document_reference_lambda:
    runs-on: ubuntu-latest
    environment: development
    strategy:
      matrix:
        python-version: [ "3.11" ]
    needs: ["python_lambdas_test"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.buildBranch}}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make virtual environment
        run: | 
          make env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for Create Document Reference
        run: |
          make lambda_name=create_document_reference_handler zip
    
      - name: Upload Lambda Function for CreateDocRefLambda
        uses: appleboy/lambda-action@master
        with:
          aws_region: ${{ vars.AWS_REGION }}
          function_name: ${{ github.event.inputs.sandboxWorkspace}}_CreateDocRefLambda
          zip_file: package_lambdas_create_document_reference_handler.zip
        
  python_deploy_search_patient_details_lambda:
    runs-on: ubuntu-latest
    environment: development
    strategy:
      matrix:
        python-version: [ "3.11" ]
    needs: [ "python_lambdas_test" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.buildBranch}}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make virtual environment
        run: |
          make env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for Search Patient Details Reference
        run: |
          make lambda_name=search_patient_details_handler zip

      - name: Upload Lambda Function for SearchPatientDetailsHandler
        uses: appleboy/lambda-action@master
        with:
          aws_region: ${{ vars.AWS_REGION }}
          function_name: ${{ github.event.inputs.sandboxWorkspace}}_SearchPatientDetailsLambda
          zip_file: package_lambdas_search_patient_details_handler.zip

  python_deploy_document_reference_search_lambda:
    runs-on: ubuntu-latest
    environment: development
    strategy:
      matrix:
        python-version: [ "3.11" ]
    needs: [ "python_lambdas_test" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.buildBranch}}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make virtual environment
        run: |
          make env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for Document Reference Search
        run: |
          make lambda_name=document_reference_search_handler zip

      - name: Upload Lambda Function for DocumentReferenceSearchHandler
        uses: appleboy/lambda-action@master
        with:
          aws_region: ${{ vars.AWS_REGION }}
          function_name: ${{ github.event.inputs.sandboxWorkspace}}_SearchDocumentReferencesLambda
          zip_file: package_lambdas_document_reference_search_handler.zip

  python_deploy_document_manifest_by_nhs_number_lambda:
    runs-on: ubuntu-latest
    environment: development
    needs: ["python_lambdas_test"]
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make virtual environment
        run: |
          make env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for Document Manifest By NHS Number
        run: |
          make lambda_name=document_manifest_by_nhs_number_handler zip

      - name: Upload Lambda Function for DocumentReferenceSearchHandler
        uses: appleboy/lambda-action@master
        with:
          aws_region: ${{ vars.AWS_REGION }}
          function_name: ${{ github.event.inputs.sandboxWorkspace}}_DocumentManifestByNHSNumberLambda
          zip_file: package_lambdas_document_manifest_by_nhs_number_handler.zip

  python_deploy_login_redirect_lambda:
    runs-on: ubuntu-latest
    environment: test
    needs: ["python_lambdas_test"]
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make virtual environment
        run: |
          make env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for Login Redirect Handler
        run: |
          make lambda_name=login_redirect_handler zip

      - name: Upload Lambda Function for Login Redirect Handler
        uses: appleboy/lambda-action@master
        with:
          aws_region: ${{ vars.AWS_REGION }}
          function_name: ${{ github.event.inputs.sandboxWorkspace}}_LoginRedirectHandler
          zip_file: package_lambdas_login_redirect_handler.zip


  python_deploy_authoriser_lambda:
    runs-on: ubuntu-latest
    environment: test
    needs: ["python_lambdas_test"]
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make virtual environment
        run: |
          make env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for Authoriser
        run: |
          make lambda_name=authoriser_handler zip

      - name: Upload Lambda Function for Authoriser
        uses: appleboy/lambda-action@master
        with:
          aws_region: ${{ vars.AWS_REGION }}
          function_name: ${{ github.event.inputs.sandboxWorkspace}}_AuthoriserLambda
          zip_file: package_lambdas_authoriser_handler.zip


  python_deploy_token_request_lambda:
    runs-on: ubuntu-latest
    environment: test
    needs: ["python_lambdas_test"]
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make virtual environment
        run: |
          make env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for Token lambda
        run: |
          make lambda_name=token_handler zip

      - name: Upload Lambda Function for TokenRequestHandler
        uses: appleboy/lambda-action@master
        with:
          aws_region: ${{ vars.AWS_REGION }}
          function_name: ${{ github.event.inputs.sandboxWorkspace}}_TokenRequestHandler
          zip_file: package_lambdas_token_handler.zip

  python_deploy_logout_handler_lambda:
    runs-on: ubuntu-latest
    environment: test
    needs: ["python_lambdas_test"]
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make virtual environment
        run: |
          make env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for LogoutHandler lambda
        run: |
          make lambda_name=logout_handler zip

      - name: Upload Lambda Function for LogoutHandler
        uses: appleboy/lambda-action@master
        with:
          aws_region: ${{ vars.AWS_REGION }}
          function_name: ${{ github.event.inputs.sandboxWorkspace}}_LogoutHandler
          zip_file: package_lambdas_logout_handler.zip

  python_deploy_lloyd_george_record_stitch_lambda:
    runs-on: ubuntu-latest
    environment: development
    needs: ["python_lambdas_test"]
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make virtual environment
        run: |
          make env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for Lloyd George Stitch Lambda
        run: |
          make lambda_name=lloyd_george_record_stitch_handler zip

      - name: Upload Lambda Function for LloydGeorgeStitchLambda
        uses: appleboy/lambda-action@master
        with:
          aws_region: ${{ vars.AWS_REGION }}
          function_name: ${{ github.event.inputs.sandboxWorkspace}}_LloydGeorgeStitchLambda
          zip_file: package_lambdas_lloyd_george_record_stitch_handler.zip


  python_deploy_bulk_upload_metadata_lambda:
    runs-on: ubuntu-latest
    environment: development
    needs: ["python_lambdas_test"]
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make virtual environment
        run: |
          make env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for Bulk Upload Metadata Lambda
        run: |
          make lambda_name=bulk_upload_metadata_handler zip

      - name: Upload Lambda Function for BulkUploadMetadataLambda
        uses: appleboy/lambda-action@master
        with:
          aws_region: ${{ vars.AWS_REGION }}
          function_name: ${{ github.event.inputs.sandboxWorkspace}}_BulkUploadMetadataLambda
          zip_file: package_lambdas_bulk_upload_metadata_handler.zip

  python_deploy_bulk_upload_lambda:
    runs-on: ubuntu-latest
    environment: development
    needs: ["python_lambdas_test"]
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make virtual environment
        run: |
          make env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for Bulk Upload Lambda
        run: |
          make lambda_name=bulk_upload_handler zip

      - name: Upload Lambda Function for BulkUpload Lambda
        uses: appleboy/lambda-action@master
        with:
          aws_region: ${{ vars.AWS_REGION }}
          function_name: ${{ github.event.inputs.sandboxWorkspace}}_BulkUploadLambda
          zip_file: package_lambdas_bulk_upload_handler.zip