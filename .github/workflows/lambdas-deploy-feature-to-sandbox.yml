name: "SANDBOX Lambdas - Deploy Feature Branch to Sandbox"

on:
  workflow_dispatch:
    inputs:
      build_branch:
        description: "Feature branch to push to test?"
        required: true
        type: "string"
        default: "main"
      sandbox:
        description: "Which Sandbox to push to."
        required: true
        type: "string"
        default: "ndr"
      environment:
        description: "Which Environment settings to use."
        required: true
        type: "string"
        default: "development"
  workflow_call:
    inputs:
      build_branch:
        description: "Feature branch to push to test?"
        required: true
        type: "string"
        default: "main"
      sandbox:
        description: "Which Sandbox to push to."
        required: true
        type: "string"
        default: "ndr"
      environment:
        description: "Which Environment settings to use."
        required: true
        type: "string"
        default: "development"
    secrets:
      AWS_ASSUME_ROLE:
        required: true

permissions:
  pull-requests: write
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  run_tests:
    name: Run all python tests
    uses: ./.github/workflows/base-lambdas-reusable-test.yml
    with:
      python_version: "3.11"
      build_branch: ${{ inputs.build_branch }}

  publish_all_lambda_layers:
    name: Publish all Lambda Layers
    uses: ./.github/workflows/base-lambda-layer-reusable-publish-all.yml
    with:
      build_branch: ${{ inputs.build_branch }}
      sandbox: ${{ inputs.sandbox }}
      environment: ${{ inputs.environment }}
      python_version: "3.11"
    secrets:
      AWS_ASSUME_ROLE: ${{ secrets.AWS_ASSUME_ROLE }}

  deploy_all:
    name: Deploy all Lambdas
    uses: ./.github/workflows/base-lambdas-reusable-deploy-all.yml
    needs: ["publish_all_lambda_layers"]
    with:
      environment: ${{ inputs.environment }}
      python_version: "3.11"
      build_branch: ${{ inputs.build_branch }}
      sandbox: ${{ inputs.sandbox }}
      is_sandbox: true
    secrets:
      AWS_ASSUME_ROLE: ${{ secrets.AWS_ASSUME_ROLE }}

  

        