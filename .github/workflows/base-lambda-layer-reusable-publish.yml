name: 'Z-BASE Lambda Layer: action to deploy a single lambda layer'

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      python_version:
        required: true
        type: string
      build_branch:
        required: true
        type: string
        default: main
      sandbox:
        required: true
        type: string
        default: main
      lambda_layer_name:
        required: true
        type: string
    secrets:
      AWS_ASSUME_ROLE:
        required: true

permissions:
  pull-requests: write
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  python_deploy_lambda_layer:
    name: Deploy lambda layer ${{ inputs.lambda_layer_name }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Display passed variables
        run: |
          echo Python Version: ${{ inputs.python_version }}
          echo Build Branch: ${{ inputs.build_branch }}
          echo Environment: ${{ inputs.environment }}
          echo Sandbox: ${{ inputs.sandbox }}
          echo Lambda Layer Name: ${{ inputs.lambda_layer_name }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: 'nhsconnect/national-document-repository'
          ref: ${{ inputs.build_branch }}
          fetch-depth: '0'

      - name: Set up Python ${{ inputs.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version }}

      - name: Make virtual environment
        run: |
          make github_env

      - name: Configure AWS Credentials for ${{ vars.AWS_REGION }}
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for Lambda Layer ${{ inputs.lambda_layer_name }}
        run: |
          make lambda_layer_zip layer_name=${{ inputs.lambda_layer_name }}

      - name: Publish Lambda Layer for ${{ vars.AWS_REGION }}
        id: publish_layer_main
        run: |
          aws lambda publish-layer-version --layer-name ${{ inputs.sandbox }}_${{ inputs.lambda_layer_name }} \
          --zip-file fileb://build/lambda_layers/${{ inputs.lambda_layer_name }}/${{ inputs.lambda_layer_name }}.zip \
          --compatible-runtimes python${{ inputs.python_version }} \
          --compatible-architectures "x86_64"

      # - name: Configure AWS Credentials for us-east-1
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
      #     role-skip-session-tagging: true
      #     aws-region: us-east-1

      # - name: Publish Lambda Layer for us-east-1
      #   id: publish_layer_edge
      #   run: |
      #     aws lambda publish-layer-version --layer-name ${{ inputs.sandbox }}_${{ inputs.lambda_layer_name }} \
      #     --zip-file fileb://build/lambda_layers/${{ inputs.lambda_layer_name }}/${{ inputs.lambda_layer_name }}.zip \
      #     --compatible-runtimes python${{ inputs.python_version }} \
      #     --compatible-architectures "x86_64"
