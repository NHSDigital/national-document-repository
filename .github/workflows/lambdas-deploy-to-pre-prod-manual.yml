name: "Lambdas - Deploy and Version Main to Pre-Prod"

on:
  workflow_dispatch:

permissions:
  pull-requests: write
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:

  tag_and_release:
    runs-on: ubuntu-latest
    environment: pre-prod
    outputs:
      tag: ${{steps.versioning.outputs.tag}}
      new_tag: ${{steps.versioning.outputs.new_tag}}
    defaults:
      run:
        working-directory: ./lambdas
    permissions: write-all

    steps:

    - uses: actions/checkout@v3
      with:
        ref: main
        fetch-depth: '0'

    - name: Bump version and push tag
      id: versioning
      uses: anothrNick/github-tag-action@1.64.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: false
        DEFAULT_BUMP: patch
    
    - name: View outputs
      run: |
        echo Current tag: ${{steps.versioning.outputs.tag}} 
        echo New tag: ${{steps.versioning.outputs.new_tag}}

  python_lambdas_test:
    runs-on: ubuntu-latest
    environment: pre-prod
    needs: ['tag_and_release']

    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{needs.tag_and_release.outputs.tag}}
          fetch-depth: '0'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make virtual environement
        run: | 
          make env
      
      - name: Start virtual environement
        run: |
          source ./lambdas/venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Format Code and ruff check
        run: |
          make format

      - name: Test with pytest
        run: |
          make test-unit

  python_deploy_create_document_reference_lambda:
    runs-on: ubuntu-latest
    environment: pre-prod
    needs: ["python_lambdas_test", 'tag_and_release']

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{needs.tag_and_release.outputs.tag}}
          fetch-depth: '0'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for Create Document Reference
        run: |
          make lambda_name=create_document_reference_handler zip
    
      - name: Upload Lambda Function for CreateDocRefLambda
        uses: appleboy/lambda-action@master
        with:
          aws_region: ${{ vars.AWS_REGION }}
          function_name: ${{ vars.BUILD_ENV }}_CreateDocRefLambda
          zip_file: package_lambdas_create_document_reference_handler.zip
   
  python_deploy_search_patient_details_lambda:
    runs-on: ubuntu-latest
    environment: pre-prod
    needs: ["python_lambdas_test"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{needs.tag_and_release.outputs.tag}}
          fetch-depth: '0'

      - name: Make virtual environement
        run: | 
          make env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for Search Patient Details Reference
        run: |
          make lambda_name=search_patient_details_handler zip
    
      - name: Upload Lambda Function for SearchPatientDetailsHandler
        uses: appleboy/lambda-action@master
        with:
          aws_region: ${{ vars.AWS_REGION }}
          function_name: ${{ vars.BUILD_ENV }}_SearchPatientDetailsLambda
          zip_file: package_lambdas_search_patient_details_handler.zip

  python_deploy_document_reference_search_lambda:
    runs-on: ubuntu-latest
    environment: development
    needs: [ "python_lambdas_test" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{needs.tag_and_release.outputs.tag}}

      - name: Make virtual environment
        run: |
          make env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for Document Reference Search
        run: |
          make lambda_name=document_reference_search_handler zip

      - name: Upload Lambda Function for DocumentReferenceSearchHandler
        uses: appleboy/lambda-action@master
        with:
          aws_region: ${{ vars.AWS_REGION }}
          function_name: ${{ github.event.inputs.sandboxWorkspace}}_SearchDocumentReferencesLambda
          zip_file: package_lambdas_document_reference_search_handler.zip