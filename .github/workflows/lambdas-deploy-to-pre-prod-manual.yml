name: "Lambdas - Deploy and Version Main to Pre-Prod"

on:
  workflow_dispatch:

permissions:
  pull-requests: write
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:

  tag_and_release:
    runs-on: ubuntu-latest
    environment: pre-prod
    outputs:
      tag: ${{steps.versioning.outputs.tag}}
      new_tag: ${{steps.versioning.outputs.new_tag}}
    defaults:
      run:
        working-directory: ./app
    permissions: write-all

    steps:

    - uses: actions/checkout@v3
      with:
        ref: main
        fetch-depth: '0'

    - name: Bump version and push tag
      id: versioning
      uses: anothrNick/github-tag-action@1.64.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: false
        DEFAULT_BUMP: patch
    
    - name: View outputs
      run: |
        echo Current tag: ${{steps.versioning.outputs.tag}} 
        echo New tag: ${{steps.versioning.outputs.new_tag}}

  python_lambdas_test:
    runs-on: ubuntu-latest
    environment: pre-prod
    defaults:
      run:
        working-directory: ./lambdas
    needs: ['tag_and_release']

    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{needs.tag_and_release.outputs.tag}}
          fetch-depth: '0'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install ruff pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with ruff
        run: |
          ruff check .

      - name: Test with pytest
        run: |
          pytest

  python_deploy_create_document_reference_lambda:
    runs-on: ubuntu-latest
    environment: pre-prod
    defaults:
      run:
        working-directory: ./lambdas
    needs: ["python_lambdas_test", 'tag_and_release']

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{needs.tag_and_release.outputs.tag}}
          fetch-depth: '0'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for Create Document
        run: |
          mkdir package_lambda_create_document_reference
          pip install -r requirements.txt --target ./package_lambda_create_document_reference
          cd package_lambda_create_document_reference
          zip -r ../package_lambda_create_document_reference.zip .
          cd ..
          zip package_lambda_create_document_reference.zip lambda_create_document_reference.py
          zip -r package_lambda_create_document_reference.zip utils
    

      - name: Upload Lambda Function
        uses: appleboy/lambda-action@master
        with:
          aws_region: ${{ vars.AWS_REGION }}
          function_name: ${{ vars.BUILD_ENV }}_CreateDocRefLambda
          zip_file: lambdas/package_lambda_create_document_reference.zip
