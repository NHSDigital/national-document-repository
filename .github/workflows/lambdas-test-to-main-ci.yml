# .github/workflows/terraform-dev
name: 'Lambdas - Development CI Feature Branch to Main'

on:
  push:
    branches:
    - main
    paths:
    - 'lambdas/**'
  pull_request:
    branches:
    - main
    paths:
    - 'lambdas/**'

permissions:
  pull-requests: write
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:

  identify_changed_functions:
    runs-on: ubuntu-latest
    outputs:
      utils_changed: ${{steps.filter.outputs.utils}}
      create_document_reference_changed: ${{steps.filter.outputs.create_document_reference}}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: filter search
      uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          utils: 
            - 'lambdas/utils/**'
          create_document_reference:
            - 'lambdas/lambda_create_document_reference.py'

  python_lambdas_test:
    runs-on: ubuntu-latest
    environment: development
    defaults:
      run:
        working-directory: ./lambdas
    strategy:
      matrix:
        python-version: ["3.9"]
  
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install ruff pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with ruff
      run: |
        ruff check .

    - name: Test with pytest
      run: |
        pytest test_create_document_reference.py
    
  python_deploy_create_document_reference_lambda:
    runs-on: ubuntu-latest
    environment: development
    defaults:
      run:
        working-directory: ./lambdas

    needs: ['python_lambdas_test', 'identify_changed_functions']
    if: needs.identify_changed_functions.outputs.utils_changed == 'true' || needs.identify_changed_functions.outputs.create_document_reference_changed == 'true'

    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
        role-skip-session-tagging: true
        aws-region: ${{ vars.AWS_REGION }}
    
    - name: View AWS Role
      run: aws sts get-caller-identity

    - name: Create release package for Create Document
      run: |
        zip package_create_document.zip lambda_create_document_reference.py
        zip -r package_create_document.zip utils
    
    - name: Upload Lambda Function
      uses: appleboy/lambda-action@master
      with:
        aws_region: ${{ vars.AWS_REGION }}
        function_name: ${{ vars.BUILD_ENV }}_CreateDocRefLambda
        zip_file: lambdas/package_create_document.zip
    