name: "XDeploy FULL Lambdas - Dispatch Deploy"

on:
  repository_dispatch:
    types: lambda-dispatch-deploy

permissions:
  pull-requests: write
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  view_action_parameters:
    runs-on: ubuntu-latest
    steps:
      - name: Display client passed variables
        run: |
          echo Environement Equals: ${{ github.event.client_payload.environment }}
          echo Sandbox Equals: ${{ github.event.client_payload.sandbox }}

  python_lambdas_test:
    runs-on: ubuntu-latest
    environment: ${{ github.event.client_payload.environment }}
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make virtual environment
        run: |
          make env

      - name: Start virtual environment
        run: |
          source ./lambdas/venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Format Code and ruff check
        run: |
          make format

      - name: Test with pytest
        run: |
          make test-unit

  python_deploy_create_document_reference_lambda:
    runs-on: ubuntu-latest
    environment: ${{ github.event.client_payload.environment }}
    strategy:
      matrix:
        python-version: ["3.11"]
    needs: ["python_lambdas_test"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make virtual environment
        run: |
          make env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for Create Document Reference
        run: |
          make lambda_name=create_document_reference_handler zip

      - name: Upload Lambda Function for CreateDocRefLambda
        uses: appleboy/lambda-action@master
        with:
          aws_region: ${{ vars.AWS_REGION }}
          function_name: ${{ github.event.client_payload.sandbox }}_CreateDocRefLambda
          zip_file: package_lambdas_create_document_reference_handler.zip

  python_deploy_search_patient_details_lambda:
    runs-on: ubuntu-latest
    environment: ${{ github.event.client_payload.environment }}
    strategy:
      matrix:
        python-version: ["3.11"]
    needs: ["python_lambdas_test"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.buildBranch}}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make virtual environment
        run: |
          make env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for Search Patient Details Reference
        run: |
          make lambda_name=search_patient_details_handler zip

      - name: Upload Lambda Function for SearchPatientDetailsHandler
        uses: appleboy/lambda-action@master
        with:
          aws_region: ${{ vars.AWS_REGION }}
          function_name: ${{ github.event.client_payload.sandbox }}_SearchPatientDetailsLambda
          zip_file: package_lambdas_search_patient_details_handler.zip

  python_deploy_document_reference_search_lambda:
    runs-on: ubuntu-latest
    environment: ${{ github.event.client_payload.environment }}
    strategy:
      matrix:
        python-version: ["3.11"]
    needs: ["python_lambdas_test"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.buildBranch}}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make virtual environment
        run: |
          make env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for Document Reference Search
        run: |
          make lambda_name=document_reference_search_handler zip

      - name: Upload Lambda Function for DocumentReferenceSearchHandler
        uses: appleboy/lambda-action@master
        with:
          aws_region: ${{ vars.AWS_REGION }}
          function_name: ${{ github.event.client_payload.sandbox }}_SearchDocumentReferencesLambda
          zip_file: package_lambdas_document_reference_search_handler.zip

  python_deploy_delete_document_reference_handler:
    runs-on: ubuntu-latest
    environment: ${{ github.event.client_payload.environment }}
    strategy:
      matrix:
        python-version: [ "3.11" ]
    needs: [ "python_lambdas_test" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.buildBranch}}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make virtual environment
        run: |
          make env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for Delete Document Reference
        run: |
          make lambda_name=delete_document_reference_handler zip

      - name: Upload Lambda Function for DeleteDocRefLambda
        uses: appleboy/lambda-action@master
        with:
          aws_region: ${{ vars.AWS_REGION }}
          function_name: ${{ github.event.client_payload.sandbox }}_DeleteDocRefLambda
          zip_file: package_lambdas_delete_document_reference_handler.zip

  python_deploy_lloyd_george_record_stitch_lambda:
    runs-on: ubuntu-latest
    environment: ${{ github.event.client_payload.environment }}
    needs: ["python_lambdas_test"]
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make virtual environement
        run: |
          make env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for Lloyd George Stitch Lambda
        run: |
          make lambda_name=lloyd_george_record_stitch_handler zip

      - name: Upload Lambda Function for LloydGeorgeStitchLambda
        uses: appleboy/lambda-action@master
        with:
          aws_region: ${{ vars.AWS_REGION }}
          function_name: ${{ github.event.client_payload.sandbox }}_LloydGeorgeStitchLambda
          zip_file: package_lambdas_lloyd_george_record_stitch_handler.zip

  python_deploy_back_channel_logout_lambda:
    runs-on: ubuntu-latest
    environment: development
    needs: ["python_lambdas_test"]
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make virtual environment
        run: |
          make env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for Back Channel Logout Lambda
        run: |
          make lambda_name=back_channel_logout_handler zip

      - name: Upload Lambda Function for Back Channel Logout Lambda
        uses: appleboy/lambda-action@master
        with:
          aws_region: ${{ vars.AWS_REGION }}
          function_name: ${{ github.event.inputs.sandboxWorkspace}}_BackChannelLogoutHandler
          zip_file: package_lambdas_back_channel_logout_handler.zip


  python_deploy_send_feedback_lambda:
    runs-on: ubuntu-latest
    environment: development
    needs: ["python_lambdas_test"]
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make virtual environment
        run: |
          make env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-skip-session-tagging: true
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create release package for Send Feedback Lambda
        run: |
          make lambda_name=send_feedback_handler zip

      - name: Upload Lambda Function for Send Feedback Lambda
        uses: appleboy/lambda-action@master
        with:
          aws_region: ${{ vars.AWS_REGION }}
          function_name: ${{ github.event.inputs.sandboxWorkspace}}_SendFeedbackHandler
          zip_file: package_lambdas_send_feedback_handler.zip
